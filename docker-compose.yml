version: "3.7"
services:

  # --------------------
  # Kafka & Confluent
  # --------------------
  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper:7.5.0
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "22181:2181"
    networks:
      - streaming_net

  kafka_broker:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://0.0.0.0:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_broker:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
    networks:
      - streaming_net

  control-center:
    image: confluentinc/cp-enterprise-control-center:7.5.0
    container_name: control_center
    depends_on:
      - kafka_broker
      - zookeeper
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: kafka_broker:9092
      CONTROL_CENTER_ZOOKEEPER_CONNECT: zookeeper:2181
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 2
    ports:
      - "9021:9021"
    networks:
      - streaming_net

  # --------------------
  # Postgres, Hive Metastore 
  # --------------------
  postgresdb:
    image: 'postgres:latest'
    hostname: postgresdb
    container_name: postgresdb
    ports:
      - '5432:5432'
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: metastore_db
    volumes:
      - ./.hive-metastore:/var/lib/postgresql/data
    networks:
      - streaming_net

  hive-metastore:
    image: 'naushadh/hive-metastore'
    container_name: hive-metastore
    hostname: hive-metastore
    ports:
      - '9083:9083' # Metastore Thrift
    environment:
      - DATABASE_HOST=postgresdb
      - DATABASE_DB=metastore_db
      - DATABASE_USER=admin
      - DATABASE_PASSWORD=admin
      - S3_PREFIX=myminio
      - S3_BUCKET=warehouse
      - S3_ENDPOINT_URL=http://minio:9000
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
    depends_on:
      - postgresdb
      - minio
    networks:
      - streaming_net

  # --------------------
  # Spark Thrift
  # --------------------
  spark-thrift:
    image: spark-thrift
    container_name: spark-thrift
    build:
      context: .
      dockerfile: docker/SparkThriftDockerfile
    ports:
      - "10000:10000"
      - "4040:4040"
    depends_on:
      - hive-metastore
    command: >
      --class org.apache.spark.sql.hive.thriftserver.HiveThriftServer2
      --name Thrift JDBC/ODBC Server
      --hiveconf hive.server2.thrift.bind.host=0.0.0.0
    volumes:
      - ./.spark-warehouse/:/spark-warehouse/
      - ./docker/config/hive-site.xml:/usr/spark/conf/hive-site.xml
      - ./docker/config/spark-defaults.conf:/usr/spark/conf/spark-defaults.conf
    environment:
      - WAIT_FOR=hive-metastore:9083
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - HIVE_SERVER2_THRIFT_BIND_HOST=spark-thrift
    networks:
      - streaming_net

  # --------------------
  # MinIO
  # --------------------
  minio:
    image: minio/minio:RELEASE.2022-11-08T05-27-07Z
    hostname: minio
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - .minio-data:/data
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin
      MINIO_API_SELECT_PARQUET: "on"
    command: server --console-address ":9001" /data
    networks:
      - streaming_net

  minio-init:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
        until mc alias set myminio http://minio:9000 minioadmin minioadmin; do
          echo 'Waiting for MinIO to be ready...'
          sleep 3
        done &&
        mc mb --ignore-existing myminio/warehouse &&
        mc mb --ignore-existing myminio/raw &&
        mc mb --ignore-existing myminio/staging
      "
    networks:
      - streaming_net

networks:
  streaming_net:
    driver: bridge